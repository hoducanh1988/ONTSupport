<UserControl x:Class="ONTWiFiMaster.uCtrl.Sub.ucVerify"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ONTWiFiMaster.uCtrl.Sub"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="White">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label Background="#b8b8b8" Height="30" VerticalAlignment="Top" Grid.ColumnSpan="2" FontSize="15" FontWeight="SemiBold" Content="3/4: Verify tín hiệu WiFi"/>
        <Border CornerRadius="5" BorderBrush="#777777" BorderThickness="0.5" Margin="0,32,0,5">
            <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                <StackPanel>
                    <StackPanel.Resources>

                        <Style TargetType="ComboBox">
                            <Setter Property="BorderThickness" Value="1,1,1,1"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="IsEditable" Value="True"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="Foreground" Value="Blue"/>
                            <Setter Property="Margin" Value="95,0,5,0"/>
                            <Setter Property="Padding" Value="5,0,0,0"/>
                        </Style>

                        <Style TargetType="Button">
                            <Setter Property="FontSize" Value="20"/>
                            <Setter Property="Margin" Value="5,0,5,10"/>
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="IsEnabled" Value="False"/>
                            <EventSetter Event="Click" Handler="Button_Click"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" Value="Start">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                        <Style TargetType="CheckBox">
                            <Setter Property="FontSize" Value="13"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="Foreground" Value="Red"/>
                            <Setter Property="Margin" Value="10,10,0,0"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </StackPanel.Resources>

                    <StackPanel x:Name="sp_setting">
                        <!--Máy đo wifi-->
                        <Label FontSize="13" FontWeight="SemiBold" Content="Cài đặt máy đo WiFi"/>
                        <Expander IsExpanded="True">
                            <StackPanel>
                                <Grid Margin="0,5,0,0">
                                    <Label Content="Antenna 1: "/>
                                    <ComboBox x:Name="cbb_Port1" Text="{Binding Path=Port1, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                                <Grid Margin="0,5,0,0">
                                    <Label Content="Antenna 2: "/>
                                    <ComboBox x:Name="cbb_Port2" Text="{Binding Path=Port2, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </StackPanel>
                        </Expander>

                        <!--Các bước thực hiện calib-->
                        <Label Content=""/>
                        <Label FontSize="13" FontWeight="SemiBold" Content="Các bước thực hiện verify"/>
                        <Expander>
                            <StackPanel>
                                <Border Height="150" CornerRadius="5,5,5,5" Margin="95,5,5,5" BorderThickness="0.5" BorderBrush="#777777">
                                    <StackPanel>
                                        <CheckBox IsChecked="{Binding Path=testPer2G, UpdateSourceTrigger=PropertyChanged}" Content="Test PER 2G" />
                                        <CheckBox IsChecked="{Binding Path=testPer5G, UpdateSourceTrigger=PropertyChanged}" Content="Test PER 5G" />
                                        <CheckBox IsChecked="{Binding Path=testSignal2G, UpdateSourceTrigger=PropertyChanged}" Content="Test tín hiệu 2G" />
                                        <CheckBox IsChecked="{Binding Path=testSignal5G, UpdateSourceTrigger=PropertyChanged}" Content="Test tín hiệu 5G" />

                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </Expander>
                    </StackPanel>

                    <Button Tag="start" Content="{Binding Path=buttonContent, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </ScrollViewer>
        </Border>

        <TabControl Margin="3,31,0,5" BorderThickness="1,1,1,1" Grid.Column="1" TabStripPlacement="Bottom">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabPanel}">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                </Style>

                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid>
                                    <Border Name="Border" Margin="0,0,-4,0" BorderThickness="1,1,1,1" CornerRadius="5" >
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Panel.ZIndex" Value="100"/>
                                        <Setter TargetName="Border" Property="Background" Value="#43d854" />
                                        <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="Orange" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </TabControl.Resources>
            <TabItem>
                <TabItem.Header>
                    <Label FontSize="13" FontWeight="SemiBold" Content="Log Item"/>
                </TabItem.Header>

                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel Margin="30,0,0,0">
                        <StackPanel.Resources>

                            <Style TargetType="Label" x:Key="label_title">
                                <Setter Property="FontSize" Value="15"/>
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="BorderBrush" Value="#777777"/>
                                <Setter Property="BorderThickness" Value="1,0,0,1"/>
                                <Setter Property="Width" Value="150"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Background" Value="#dedede"/>
                            </Style>

                            <Style TargetType="Label" x:Key="label_content">
                                <Setter Property="FontSize" Value="15"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="BorderBrush" Value="#777777"/>
                                <Setter Property="BorderThickness" Value="1,0,1,1"/>
                                <Setter Property="Width" Value="300"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="Padding" Value="10,0,0,0"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" Value="Waiting...">
                                        <Setter Property="Foreground" Value="Orange"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" Value="Passed">
                                        <Setter Property="Foreground" Value="Lime"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" Value="Failed">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>

                            <Style TargetType="ProgressBar" x:Key="progressbar_content">
                                <Setter Property="Foreground" Value="Lime"/>
                            </Style>

                        </StackPanel.Resources>

                        <WrapPanel Margin="0,10,0,20">
                            <Label FontSize="17" Content="Mac Address:"/>
                            <Label FontSize="17" FontWeight="SemiBold" Content="{Binding Path=macAddress, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>

                        <WrapPanel>
                            <Label Style="{StaticResource label_title}" BorderThickness="1,1,0,1" Content="Test PER 2G"/>
                            <Grid>
                                <Label Style="{StaticResource label_content}" BorderThickness="1,1,1,1" Content="{Binding Path=per2GResult, UpdateSourceTrigger=PropertyChanged}"/>
                                <ProgressBar Value="{Binding Path=valuePER2G, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxPER2G, UpdateSourceTrigger=PropertyChanged}">
                                    <ProgressBar.Style>
                                        <Style TargetType="ProgressBar" BasedOn="{StaticResource progressbar_content}">
                                            <Setter Property="Opacity" Value="0"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=per2GResult}" Value="Waiting...">
                                                    <Setter Property="Opacity" Value="0.2"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>
                                <WrapPanel HorizontalAlignment="Right">
                                    <Label Margin="-5,0,0,0" Content="P="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=passedPER2G, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Margin="-5,0,0,0" Content="/"/>
                                    <Label Margin="-5,0,0,0" Content="F="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=failedPER2G, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Margin="-5,0,0,0" Content="/"/>
                                    <Label Margin="-5,0,0,0" Content="T="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=maxPER2G, UpdateSourceTrigger=PropertyChanged}"/>
                                </WrapPanel>
                            </Grid>

                        </WrapPanel>
                        <WrapPanel>
                            <Label Style="{StaticResource label_title}" Content="Test PER 5G"/>
                            <Grid>
                                <Label Style="{StaticResource label_content}" Content="{Binding Path=per5GResult, UpdateSourceTrigger=PropertyChanged}"/>
                                <ProgressBar Value="{Binding Path=valuePER5G, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxPER5G, UpdateSourceTrigger=PropertyChanged}">
                                    <ProgressBar.Style>
                                        <Style TargetType="ProgressBar" BasedOn="{StaticResource progressbar_content}">
                                            <Setter Property="Opacity" Value="0"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=per5GResult}" Value="Waiting...">
                                                    <Setter Property="Opacity" Value="0.2"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>
                                <WrapPanel HorizontalAlignment="Right">
                                    <Label Margin="-5,0,0,0" Content="P="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=passedPER5G, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Margin="-5,0,0,0" Content="/"/>
                                    <Label Margin="-5,0,0,0" Content="F="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=failedPER5G, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Margin="-5,0,0,0" Content="/"/>
                                    <Label Margin="-5,0,0,0" Content="T="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=maxPER5G, UpdateSourceTrigger=PropertyChanged}"/>
                                </WrapPanel>
                            </Grid>
                        </WrapPanel>
                        <WrapPanel>
                            <Label Style="{StaticResource label_title}" Content="Test tín hiệu 2G"/>
                            <Grid>
                                <Label Style="{StaticResource label_content}" Content="{Binding Path=signal2GResult, UpdateSourceTrigger=PropertyChanged}"/>
                                <ProgressBar Value="{Binding Path=valueSignal2G, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxSignal2G, UpdateSourceTrigger=PropertyChanged}">
                                    <ProgressBar.Style>
                                        <Style TargetType="ProgressBar" BasedOn="{StaticResource progressbar_content}">
                                            <Setter Property="Opacity" Value="0"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=signal2GResult}" Value="Waiting...">
                                                    <Setter Property="Opacity" Value="0.2"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>
                                <WrapPanel HorizontalAlignment="Right">
                                    <Label Margin="-5,0,0,0" Content="P="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=passedSignal2G, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Margin="-5,0,0,0" Content="/"/>
                                    <Label Margin="-5,0,0,0" Content="F="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=failedSignal2G, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Margin="-5,0,0,0" Content="/"/>
                                    <Label Margin="-5,0,0,0" Content="T="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=maxSignal2G, UpdateSourceTrigger=PropertyChanged}"/>
                                </WrapPanel>
                            </Grid>
                        </WrapPanel>
                        <WrapPanel>
                            <Label Style="{StaticResource label_title}" Content="Test tín hiệu 5G"/>
                            <Grid>
                                <Label Style="{StaticResource label_content}" Content="{Binding Path=signal5GResult, UpdateSourceTrigger=PropertyChanged}"/>
                                <ProgressBar Value="{Binding Path=valueSignal5G, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding Path=maxSignal5G, UpdateSourceTrigger=PropertyChanged}">
                                    <ProgressBar.Style>
                                        <Style TargetType="ProgressBar" BasedOn="{StaticResource progressbar_content}">
                                            <Setter Property="Opacity" Value="0"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=signal5GResult}" Value="Waiting...">
                                                    <Setter Property="Opacity" Value="0.2"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ProgressBar.Style>
                                </ProgressBar>
                                <WrapPanel HorizontalAlignment="Right">
                                    <Label Margin="-5,0,0,0" Content="P="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=passedSignal5G, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Margin="-5,0,0,0" Content="/"/>
                                    <Label Margin="-5,0,0,0" Content="F="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=failedSignal5G, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Label Margin="-5,0,0,0" Content="/"/>
                                    <Label Margin="-5,0,0,0" Content="T="/>
                                    <Label Margin="-5,0,0,0" Content="{Binding Path=maxSignal5G, UpdateSourceTrigger=PropertyChanged}"/>
                                </WrapPanel>

                            </Grid>
                        </WrapPanel>

                        <WrapPanel Margin="0,10,0,0">
                            <Label FontSize="15" Content="Total time:"/>
                            <Label FontSize="15" FontWeight="SemiBold" Content="{Binding Path=totalTime, UpdateSourceTrigger=PropertyChanged}"/>
                        </WrapPanel>
                        <Label FontSize="15" Content="Total result:"/>
                        <Label Margin="0,-15,0,0" FontSize="40" FontWeight="SemiBold" Content="{Binding Path=totalResult, UpdateSourceTrigger=PropertyChanged}">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" Value="Waiting...">
                                            <Setter Property="Foreground" Value="Orange"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" Value="Passed">
                                            <Setter Property="Foreground" Value="Lime"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" Value="Failed">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                    </StackPanel>
                </ScrollViewer>
                
           
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label FontSize="13" FontWeight="SemiBold" Content="Log Table"/>
                </TabItem.Header>
                <ScrollViewer x:Name="scrl_logtable">
                    <StackPanel>
                        <StackPanel.Resources>

                            <Style TargetType="Label" x:Key="label_title">
                                <Setter Property="FontSize" Value="15"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="BorderBrush" Value="#777777"/>
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                            </Style>


                        </StackPanel.Resources>

                        <Label Style="{StaticResource label_title}" Content="+ Kết quả test PER 2G :"/>
                        <DataGrid Margin="5,0,5,5" x:Name="dg_per2g" 
                                              Background="White"
                                              ItemsSource="{Binding}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                              GridLinesVisibility="None"
                                              HeadersVisibility="Column"
                                              BorderThickness="0,0,0,0"
                                              SelectionUnit="FullRow" SelectionMode="Extended"
                                              >

                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                    <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="Height" Value="25"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGrid.CellStyle>

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="FontSize" Value="13"/>
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="Padding" Value="3,0,0,0"/>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Result}" Value="Failed">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Range" Width="*" Binding="{Binding Range}"/>
                                <DataGridTextColumn Header="Antenna" Width="*" Binding="{Binding Antenna}"/>
                                <DataGridTextColumn Header="WiFi" Width="*" Binding="{Binding WiFi}"/>
                                <DataGridTextColumn Header="MCS" Width="*" Binding="{Binding MCS}"/>
                                <DataGridTextColumn Header="Channel" Width="*" Binding="{Binding Channel}"/>
                                <DataGridTextColumn Header="Attenuator" Width="*" Binding="{Binding Attenuator}"/>
                                <DataGridTextColumn Header="Power" Width="*" Binding="{Binding Power}"/>
                                <DataGridTextColumn Header="Sent" Width="*" Binding="{Binding packetSent}"/>
                                <DataGridTextColumn Header="Received" Width="*" Binding="{Binding packetReceived}"/>
                                <DataGridTextColumn Header="PER" Width="*" Binding="{Binding PER}"/>
                                <DataGridTextColumn Header="Result" Width="*" Binding="{Binding Result}"/>
                            </DataGrid.Columns>
                        </DataGrid>

                        <Label Style="{StaticResource label_title}" Content="+ Kết quả test PER 5G :"/>
                        <DataGrid Margin="5,0,5,5" x:Name="dg_per5g" 
                                              Background="White"
                                              ItemsSource="{Binding}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                              GridLinesVisibility="None"
                                              HeadersVisibility="Column"
                                              BorderThickness="0,0,0,0"
                                              SelectionUnit="FullRow" SelectionMode="Extended"
                                              >

                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                    <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="Height" Value="25"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGrid.CellStyle>

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="FontSize" Value="13"/>
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="Padding" Value="3,0,0,0"/>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Result}" Value="Failed">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Range" Width="*" Binding="{Binding Range}"/>
                                <DataGridTextColumn Header="Antenna" Width="*" Binding="{Binding Antenna}"/>
                                <DataGridTextColumn Header="WiFi" Width="*" Binding="{Binding WiFi}"/>
                                <DataGridTextColumn Header="MCS" Width="*" Binding="{Binding MCS}"/>
                                <DataGridTextColumn Header="Channel" Width="*" Binding="{Binding Channel}"/>
                                <DataGridTextColumn Header="Attenuator" Width="*" Binding="{Binding Attenuator}"/>
                                <DataGridTextColumn Header="Power" Width="*" Binding="{Binding Power}"/>
                                <DataGridTextColumn Header="Sent" Width="*" Binding="{Binding packetSent}"/>
                                <DataGridTextColumn Header="Received" Width="*" Binding="{Binding packetReceived}"/>
                                <DataGridTextColumn Header="PER" Width="*" Binding="{Binding PER}"/>
                                <DataGridTextColumn Header="Result" Width="*" Binding="{Binding Result}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        

                        <Label Style="{StaticResource label_title}" Margin="0,30,0,0" Content="+ Kết quả test tín hiệu 2G :"/>
                        <DataGrid Margin="5,0,5,5" x:Name="dg_signal2g" 
                                              Background="White"
                                              ItemsSource="{Binding}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                              GridLinesVisibility="None"
                                              HeadersVisibility="Column"
                                              BorderThickness="0,0,0,0"
                                              SelectionUnit="FullRow" SelectionMode="Extended"
                                              >

                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                    <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="Height" Value="25"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGrid.CellStyle>

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="FontSize" Value="13"/>
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="Padding" Value="3,0,0,0"/>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Result}" Value="Failed">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Range" Width="*" Binding="{Binding Range}"/>
                                <DataGridTextColumn Header="Antenna" Width="*" Binding="{Binding Antenna}"/>
                                <DataGridTextColumn Header="WiFi" Width="*" Binding="{Binding WiFi}"/>
                                <DataGridTextColumn Header="MCS" Width="*" Binding="{Binding MCS}"/>
                                <DataGridTextColumn Header="Channel" Width="*" Binding="{Binding Channel}"/>
                                <DataGridTextColumn Header="Attenuator" Width="*" Binding="{Binding Attenuator}"/>
                                <DataGridTextColumn Header="Power" Width="*" Binding="{Binding Power}"/>
                                <DataGridTextColumn Header="EVM" Width="*" Binding="{Binding EVM}"/>
                                <DataGridTextColumn Header="FreqError" Width="*" Binding="{Binding freqError}"/>
                                <DataGridTextColumn Header="Result" Width="*" Binding="{Binding Result}"/>
                            </DataGrid.Columns>
                        </DataGrid>


                        <Label Style="{StaticResource label_title}" Margin="0,30,0,0" Content="+ Kết quả test tín hiệu 5G :"/>
                        <DataGrid Margin="5,0,5,5" x:Name="dg_signal5g" 
                                              Background="White"
                                              ItemsSource="{Binding}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                              GridLinesVisibility="None"
                                              HeadersVisibility="Column"
                                              BorderThickness="0,0,0,0"
                                              SelectionUnit="FullRow" SelectionMode="Extended"
                                              >

                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                    <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                    <Setter Property="FontSize" Value="15"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="Height" Value="25"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGrid.CellStyle>

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="FontSize" Value="13"/>
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="FontWeight" Value="Normal"/>
                                    <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="Padding" Value="3,0,0,0"/>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Result}" Value="Failed">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Range" Width="*" Binding="{Binding Range}"/>
                                <DataGridTextColumn Header="Antenna" Width="*" Binding="{Binding Antenna}"/>
                                <DataGridTextColumn Header="WiFi" Width="*" Binding="{Binding WiFi}"/>
                                <DataGridTextColumn Header="MCS" Width="*" Binding="{Binding MCS}"/>
                                <DataGridTextColumn Header="Channel" Width="*" Binding="{Binding Channel}"/>
                                <DataGridTextColumn Header="Attenuator" Width="*" Binding="{Binding Attenuator}"/>
                                <DataGridTextColumn Header="Power" Width="*" Binding="{Binding Power}"/>
                                <DataGridTextColumn Header="EVM" Width="*" Binding="{Binding EVM}"/>
                                <DataGridTextColumn Header="FreqError" Width="*" Binding="{Binding freqError}"/>
                                <DataGridTextColumn Header="Result" Width="*" Binding="{Binding Result}"/>
                            </DataGrid.Columns>
                        </DataGrid>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label FontSize="13" FontWeight="SemiBold" Content="Log System"/>
                </TabItem.Header>
                <ScrollViewer x:Name="scrl_logsystem">
                    <RichTextBox  Background="#FFFFFF" BorderThickness="0" IsReadOnly="True" Block.LineHeight="1" Padding="0,5,0,0">
                        <FlowDocument PageHeight="180">
                            <Paragraph>
                                <Run Foreground="Black" FontWeight="Normal" Text="{Binding Path=logSystem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ScrollViewer>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label FontSize="13" FontWeight="SemiBold" Content="Log Uart"/>
                </TabItem.Header>
                <ScrollViewer x:Name="scrl_loguart">
                    <RichTextBox  Background="#FFFFFF" BorderThickness="0" IsReadOnly="True" Block.LineHeight="1" Padding="0,5,0,0">
                        <FlowDocument PageHeight="180">
                            <Paragraph>
                                <Run Foreground="Black" FontWeight="Normal" Text="{Binding Path=logUart, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ScrollViewer>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label FontSize="13" FontWeight="SemiBold" Content="Log Instrument"/>
                </TabItem.Header>
                <ScrollViewer x:Name="scrl_loginstrument">
                    <RichTextBox  Background="#FFFFFF" BorderThickness="0" IsReadOnly="True" Block.LineHeight="1" Padding="0,5,0,0">
                        <FlowDocument PageHeight="180">
                            <Paragraph>
                                <Run Foreground="Black" FontWeight="Normal" Text="{Binding Path=logInstrument, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ScrollViewer>
            </TabItem>
        </TabControl>

    </Grid>

</UserControl>
